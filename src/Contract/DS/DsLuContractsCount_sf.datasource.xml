<DataSource name="DsLuContractsCount" backendSystem="sf" objectClass="LuContractsCount" businessObjectClass="LuContractsCount" readOnly="true" external="true" editableEntity="PrmContract" schemaVersion="2.0">
	<Database platform="SQLite">
		<Load><![CDATA[   

			var sqlParams = {};

			var sqlStmt1 = "SELECT Count(*) as contractsCount ";
			sqlStmt1 +=    "FROM ( ";

			//loadLoPrmContracts
			var loadLoPrmContracts = AppManager.getDataSource("LoPrmContracts").getLoadStatement({});

			var sqlStmt2 =     ") contracts ";
			sqlStmt2 +=    "WHERE ";
			sqlStmt2 +=      "contracts.Phase IN ('ForApproval', 'Rejected', 'Planning') ";
			sqlStmt2 +=      "AND contracts.responsiblePKey = '#UserPKey#' ";


			var sqlStmt1Result = Utils.replaceMacrosParam(sqlStmt1, sqlParams);
			var sqlStmt2Result = Utils.replaceMacrosParam(sqlStmt2, sqlParams);


			var finalSql = sqlStmt1Result.sql + loadLoPrmContracts.sql + sqlStmt2Result.sql;
			var finalParams = sqlStmt1Result.params.concat(loadLoPrmContracts.params).concat(sqlStmt2Result.params);

			return {sql: finalSql, params: finalParams};
		]]></Load>
		<Update><![CDATA[ 
			// Intended to be empty     
			return undefined;     
		]]></Update>
		<Insert><![CDATA[     
			// Intended to be empty     
			return undefined;
		]]></Insert>
		<Delete><![CDATA[      
			// Intended to be empty     
			return undefined;     
		]]></Delete>
	</Database>
</DataSource>