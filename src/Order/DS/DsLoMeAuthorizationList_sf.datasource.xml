<DataSource name="DsLoMeAuthorizationList" backendSystem="sf" businessObjectClass="LoMeAuthorizationList" external="true" schemaVersion="2.0">
  <Database platform="SQLite">
    <Load><![CDATA[
			var customerPKey = "";		
            if (Utils.isDefined(jsonQuery.customerPKey)) {
             customerPKey = Utils.convertForDBParam(jsonQuery.customerPKey, "DomPKey");
            }
			
			var sqlParams = {customerPKey};
			var sqlStmt = "SELECT prdMainPKey ";
			sqlStmt += ",customerProductNumber ";
			sqlStmt += ",focusProductType ";
			sqlStmt += ",'1' AS listed ";
			sqlStmt += ",'None' AS listing ";
			sqlStmt += ",'Hit' AS listingWithModules ";
			sqlStmt += ",focusProductImage ";
			sqlStmt += "FROM ";

			sqlStmt += "(SELECT AssortmentProduct.ProductId AS prdMainPKey ";
			sqlStmt += ",AssortmentProduct.Account_Product_Number__c AS customerProductNumber ";
			sqlStmt += ",AssortmentProduct.Focus_Product_Type__c AS focusProductType ";
			sqlStmt += ",AssortmentProduct.Valid_From__c AS validFrom ";
			sqlStmt += ",AssortmentProduct.Valid_Thru__c AS validThru ";
			sqlStmt += ",CASE AssortmentProduct.Focus_Product_Type__c WHEN ' ' THEN 'EmptyImage' ELSE 'FocusIcon' END AS focusProductImage ";
			sqlStmt += "FROM AssortmentProduct ";
			sqlStmt += "INNER JOIN Product_Assortment_Store__c ON AssortmentProduct.AssortmentId = Product_Assortment_Store__c.Assortment__c ";
			sqlStmt += "AND AssortmentProduct.IsDeleted <> '1' ";
			sqlStmt += "AND Product_Assortment_Store__c.IsDeleted <> '1' ";
			sqlStmt += "INNER JOIN Product_Listing_Module__c ON AssortmentProduct.Id = Product_Listing_Module__c.Product_Assortment_Product__c ";
			sqlStmt += "AND Product_Listing_Module__c.IsDeleted <> '1' ";
			sqlStmt += "INNER JOIN Listing_Module__c ON Product_Listing_Module__c.Listing_Module_Name__c = Listing_Module__c.Name ";
			sqlStmt += "AND Listing_Module__c.Product_Assortment__c = Product_Assortment_Store__c.Assortment__c ";
			sqlStmt += "AND Listing_Module__c.IsDeleted <> '1' ";
			sqlStmt += "INNER JOIN Listing_Classification__c ON Listing_Module__c.Name = Listing_Classification__c.Listing_Module_Name__c ";
			sqlStmt += "AND Listing_Classification__c.Account__c = #customerPKey# ";
			sqlStmt += "AND Listing_Classification__c.IsDeleted <> '1' ";
			sqlStmt += "INNER JOIN Product2 ON Product2.Id = AssortmentProduct.ProductId ";
			sqlStmt += "AND Listing_Classification__c.Product_Category__c = Product2.Category__c ";
			sqlStmt += "AND Product2.Sales_Org__c = '#SalesOrg#' ";
			sqlStmt += "AND Product2.IsDeleted <> '1' ";
			sqlStmt += "WHERE 1 = 1 ";
			sqlStmt += "AND Product_Assortment_Store__c.Store__c = #customerPKey# ";
			sqlStmt += "AND AssortmentProduct.Active__c = '1' ";
			sqlStmt += "AND #compareAsDate('AssortmentProduct.Valid_From__c', 'Date','<=' ,#TodayAsDate#, 'Date')# ";
			sqlStmt += "AND #compareAsDate('AssortmentProduct.Valid_Thru__c', 'Date','>=' ,#TodayAsDate#, 'Date')# ";
			sqlStmt += "ORDER BY AssortmentProduct.Id ASC) ";

			sqlStmt += "GROUP BY prdMainPKey ";
			sqlStmt += "HAVING MAX (validThru || 9999999999 - validFrom) ";

			return Utils.replaceMacrosParam(sqlStmt, sqlParams);
		]]></Load>
  </Database>
</DataSource>