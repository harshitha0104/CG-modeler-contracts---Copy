<Process name="Order::AddProductProcess" defaultAction="SetProductListFilter_Decision" schemaVersion="0.0.0.5">
  <Entry>
    <ProcessContext>
      <Declarations>
        <Declaration name="luOrderItemMeta" type="LuOrderItemMeta" />
        <Declaration name="buttonPressed" type="String" />
      </Declarations>
      <Parameters>
        <Input name="ProductList" type="LoProductForAdd" />
        <Input name="FilterByBpaAssortment" type="DomBool" />
        <Input name="CurrentItemTemplate" type="LiOrderItemMeta" />
        <Input name="Listing" type="DomString" />
        <Input name="ListingWithModules" type="DomString" />
        <Input name="HitClosedListing" type="DomBool" />
        <Input name="CollectClosedListing" type="DomBool" />
        <Input name="ConsiderListing" type="DomBool" />
      </Parameters>
    </ProcessContext>
    <EntryActions>
      <!-- Load current item template as lookup -->
      <Action actionType="LOAD" name="LoadItemTemplate" type="LuOrderItemMeta">
        <Parameters>
          <Input name="pKey" value="ProcessContext::CurrentItemTemplate.pKey" />
        </Parameters>
        <Return name="ProcessContext::luOrderItemMeta" />
      </Action>
      <Action name="InitializeButtonPressed" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" type="Literal" value="addProduct" />
        </Parameters>
        <Return name="ProcessContext::buttonPressed" />
      </Action>
    </EntryActions>
  </Entry>
  <Body>
    <Actions>
      <!-- Set filter according to current item template -->
      <!-- Reset product list filters is done in calling process (Order Item Tab) -->
      <!-- Decide which filters to set -->
      <Action name="SetProductListFilter_Decision" actionType="DECISION" parameter="ProcessContext::FilterByBpaAssortment">
        <Case value="1" action="SetProductListFilter_ItemMeta_Decision" />
        <CaseElse action="SetProductListFilter_ConsiderListing_Decision" />
      </Action>
      <!-- If FilterByBpaAssortment is active, decide whether to set the filter of SdoItemMeta -->
      <Action name="SetProductListFilter_ItemMeta_Decision" actionType="DECISION" parameter="ProcessContext::luOrderItemMeta.useAssortmentSdoItem">
        <Case value="1" action="SetProductListFilter_ConsiderListing_Decision" />
        <CaseElse action="SetProductListFilter_ConsiderListing_Decision" />
      </Action>
      <!-- Set BpaAssortmentFilter -->
      <Action name="SetBpaAssortmentFilter" actionType="LOGIC" call="ProcessContext::ProductList.setBpaAssortmentFilter">
        <Parameters>
          <Input name="prdProposalItemMetaPosition" value="ProcessContext::luOrderItemMeta.prdProposalItemMetaPosition" />
        </Parameters>
        <TransitionTo action="SetProductListFilter_ConsiderListing_Decision" />
      </Action>
      <!-- If UseClosedListing is active, set closed listint filter -->
      <Action name="SetProductListFilter_ConsiderListing_Decision" actionType="DECISION" parameter="ProcessContext::ConsiderListing">
        <Case value="1" action="SetProductListFilter_ClosedListing_Decision" />
        <CaseElse action="ShowView" />
      </Action>
      <Action name="SetProductListFilter_ClosedListing_Decision" actionType="DECISION" parameter="ProcessContext::luOrderItemMeta.useClosedListing">
        <Case value="1" action="SetClosedListingFilter" />
        <CaseElse action="ShowView" />
      </Action>
      <!-- Set closed listing filter -->
      <Action name="SetClosedListingFilter" actionType="LOGIC" call="ProcessContext::ProductList.setClosedListingFilter">
        <Parameters>
          <Input name="listing" value="ProcessContext::Listing" />
          <Input name="listingWithModules" value="ProcessContext::ListingWithModules" />
          <Input name="hitClosedListing" value="ProcessContext::HitClosedListing" />
          <Input name="collectClosedListing" value="ProcessContext::CollectClosedListing" />
        </Parameters>
        <TransitionTo action="ShowView" />
      </Action>
      <Action actionType="View" name="ShowView">
        <UIDescription>Order::AddProduct</UIDescription>
        <Events>
          <Event name="itemSelected" action="EndAddProduct" />
        </Events>
      </Action>
      <!-- End action -->
      <Action actionType="END" name="EndAddProduct">
        <ReturnValues>
          <Return name="ProductPKey" value="Event.prdMainPKey" />
          <Return name="buttonPressed" value="ProcessContext::buttonPressed" />
        </ReturnValues>
      </Action>
    </Actions>
  </Body>
</Process>